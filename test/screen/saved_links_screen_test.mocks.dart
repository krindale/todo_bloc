// Mocks generated by Mockito 5.4.5 from annotations
// in todo_bloc/test/screen/saved_links_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_bloc/model/saved_link.dart' as _i4;
import 'package:todo_bloc/services/saved_link_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SavedLinkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSavedLinkRepository extends _i1.Mock
    implements _i2.SavedLinkRepository {
  @override
  _i3.Future<int> get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> addLink(_i4.SavedLink? link) => (super.noSuchMethod(
        Invocation.method(
          #addLink,
          [link],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.SavedLink>> getAllLinks() => (super.noSuchMethod(
        Invocation.method(
          #getAllLinks,
          [],
        ),
        returnValue: _i3.Future<List<_i4.SavedLink>>.value(<_i4.SavedLink>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.SavedLink>>.value(<_i4.SavedLink>[]),
      ) as _i3.Future<List<_i4.SavedLink>>);

  @override
  _i3.Future<void> deleteLink(_i4.SavedLink? link) => (super.noSuchMethod(
        Invocation.method(
          #deleteLink,
          [link],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteLinkByKey(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #deleteLinkByKey,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateLink(
    int? index,
    _i4.SavedLink? link,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLink,
          [
            index,
            link,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.SavedLink?> getAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #getAt,
          [index],
        ),
        returnValue: _i3.Future<_i4.SavedLink?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.SavedLink?>.value(),
      ) as _i3.Future<_i4.SavedLink?>);
}
